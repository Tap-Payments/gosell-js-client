server {
  listen 80;
  server_name jslib-staging.payments.tap.company;

  # Redirect all traffic to SSL
  rewrite ^ https://$server_name$request_uri? permanent;
}

server {
  listen 443 ssl default_server;

  # enables TLSv1 TLSv1.1 TLSv1.2, but not SSLv2 which is weak and should no longer be used.
  ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

  # disables all weak ciphers
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;

  # ssl_ciphers ALL:!aNULL:!ADH:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM;
  ssl_ciphers 'HIGH:!aNULL:!MD5';
  # ssl_ciphers HIGH:ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384:TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256;

  # ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

  server_name jslib-staging.payments.tap.company;

  ## Access and error logs.
  access_log /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log info;

  ## Keep alive timeout set to a greater value for SSL/TLS.
  keepalive_timeout 75 75;

  ## See the keepalive_timeout directive in nginx.conf.
  ## Server certificate and key.
  ssl on;
  #ssl_certificate /etc/ssl/certs/example.com-rapidssl.crt;
  #ssl_certificate_key /etc/ssl/private/example.com-rapidssl.key;
  #ssl_certificate     /etc/nginx/jslib.payments.gosell.io.chained.crt;
  #ssl_certificate_key /etc/nginx/jslib.payments.gosell.io.key;
  ssl_certificate     /etc/nginx/jslib-staging-payments-tap-company.crt;
  ssl_certificate_key /etc/nginx/jslib-staging-payments-tap-company.key;

  ssl_session_timeout  5m;

  ## Strict Transport Security header for enhanced security. See
  ## http://www.chromium.org/sts. I've set it to 2 hours; set it to
  ## whichever age you want.
  add_header Strict-Transport-Security "max-age=7200";

  #root /var/www/example.com/;
  #index index.php;

  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;

  location / {
    try_files $uri @reactjs;
  }

  location /demo/ {
    proxy_pass http://nodejs:8000/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    # proxy specific logging in proxy-access.log
    # access_log /var/log/nginx/proxy-api-access.log;

    #whitelist all apple pay domains

    #For sandbox testing only
    #allow apple-pay-gateway-cert.apple.com
    #allow cn-apple-pay-gateway-cert.apple.com
  }

  location @reactjs {
    proxy_pass http://nodejs:3000;
    # proxy specific logging in proxy-access.log
    # access_log /var/log/nginx/proxy-ui-access.log;
  }


  }
